{"version":3,"sources":["assets/images/logo.svg","UI-components/Header/style/HeaderStyle.js","UI-components/Header/Header.jsx","UI-components/Main/style/MainStyle.js","UI-components/Main/GeneratePasswordForm/style/GeneratePasswordForm.js","UI-components/Main/GeneratePasswordForm/GeneratePasswordForm.jsx","utils/generatePassword.js","UI-components/Main/Main.jsx","UI-components/Footer/style/FooteStyle.js","UI-components/Footer/Footer.jsx","App.js","index.js"],"names":["Header","Layout","LogoWrapper","styled","div","HeaderStyled","style","position","zIndex","width","src","logo","Content","ContentStyled","ContentWrapper","PasswordWrapper","TitleWrapper","Title","Typography","ButtonStyled","Button","FormItemStyled","Form","Item","layout","labelCol","span","wrapperCol","GeneratePasswordForm","generatorPassword","onIDInputChange","form","initialValues","remember","size","label","name","rules","required","message","onChange","autofocus","generatePartOfPassword","generatePassword","randomInRange","min","max","Math","floor","random","generateLowerCaseLetter","String","fromCharCode","generateUpperCaseLetter","generateModCount","count","index","result","pow","start","end","func","i","Main","useForm","useState","currentPassword","changeCurrentPassword","copied","setCopied","useEffect","className","padding","minHeight","level","fieldValueLength","getFieldValue","length","Array","from","join","onCopy","text","type","disabled","ghost","icon","CopyOutlined","Footer","FooterStyled","textAlign","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,G,OAAA,IAA0B,kC,yWCGlCA,EAAUC,IAAVD,OAEME,EAAcC,IAAOC,IAAV,KAUXC,EAAeF,YAAOH,EAAPG,CAAH,KCAVH,EAXA,WAEX,OACI,cAACK,EAAD,CAAcC,MAAO,CAAEC,SAAU,QAASC,OAAQ,EAAGC,MAAO,QAA5D,SACI,cAACP,EAAD,UACI,qBAAKQ,IAAKC,S,25CCNnBC,EAAWX,IAAXW,QAEMC,EAAgBV,YAAOS,EAAPT,CAAH,KAmBbW,EAAiBX,IAAOC,IAAV,KAMdW,EAAkBZ,IAAOC,IAAV,KAKfY,EAAeb,IAAOC,IAAV,KAQZa,EAAQd,YAAOe,IAAWD,MAAlBd,CAAH,KAILgB,EAAehB,YAAOiB,IAAPjB,CAAH,K,oJC5ClB,IAAMkB,EAAiBlB,YAAOmB,IAAKC,KAAZpB,CAAH,KCCrBqB,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KA8BTE,EAxBc,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,kBAAmBC,EAAqB,EAArBA,gBAE9C,OACI,cAAC,IAAD,2BACQN,GADR,IAEIC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,IACpBK,KAAMF,EACNG,cAAe,CAAEC,UAAU,GAC3BC,KAAK,QANT,SAQI,cAACb,EAAD,CACIc,MAAM,KACNC,KAAK,KACLC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oIACnCC,SAAUV,EAJd,SAMI,cAAC,IAAD,CAAOW,UAAU,e,4BCfvBC,G,WAKAC,GAnBJC,EAAgB,SAACC,EAAKC,GAAN,OAClBC,KAAKC,MAAMH,EAAME,KAAKE,UAAYH,EAAM,EAAID,KAE1CK,EAA0B,kBAC5BC,OAAOC,aAAaR,EAAc,GAAI,OAEpCS,EAA0B,kBAC5BF,OAAOC,aAAaR,EAAc,GAAI,MAEpCU,EAAmB,SAACC,EAAOC,GAC7B,IAAMC,EAASV,KAAKW,IAAIH,EAAM,GAAK,IACnC,OAAkB,IAAVC,GAAeC,EAAS,GAAM,EAAIA,GAG9C,SAAUf,EAAuBiB,EAAOC,EAAKC,GAA7C,qFAAmDN,EAAnD,+BAA2D,EAC9CO,EAAIH,EADjB,YACwBG,GAAKF,GAD7B,gBAEQ,OAFR,SAEyB,IAAVD,EAAeE,EAAKN,EAAOO,GAAKD,IAF/C,OACkCC,IADlC,sDAKA,SAAUnB,EAAiBY,GAA3B,iEAEI,uBAAOb,EAAuB,EAAG,EAAGQ,GAApC,QAFJ,OAGI,uBAAOR,EAAuB,EAAG,EAAGW,GAApC,QAHJ,OAII,uBAAOX,EAAuB,EAAG,EAAGY,EAAkBC,GAAtD,QAJJ,uCAQe,I,kBCyBAQ,EA5CF,WAAO,IAAD,EAEazC,IAAK0C,UAA1BnC,EAFQ,sBAGkCoC,mBAAS,IAH3C,mBAGRC,EAHQ,KAGSC,EAHT,OAIaF,oBAAS,GAJtB,mBAIRG,EAJQ,KAIAC,EAJA,KAMfC,qBAAU,WACND,GAAU,KACX,CAACH,IAcJ,OACI,cAACrD,EAAD,CAAe0D,UAAU,cAAzB,SACI,eAACzD,EAAD,CAAgByD,UAAU,yBAAyBjE,MAAO,CAAEkE,QAAS,GAAIC,UAAW,uBAApF,UACI,cAACzD,EAAD,UACI,cAACC,EAAD,CAAOyD,MAAO,EAAd,iHAIJ,cAAC,EAAD,CAAsB7C,kBAAmBA,EAAmBC,gBAhBhD,WAEpB,IDGOyB,ECHDoB,EAAmB9C,EAAkB+C,cAAc,MAAMC,OAC/D,OAEOV,EAFFQ,GDEEpB,ECAuCoB,EDClDG,MAAMC,KAAKpC,EAAiBY,IAAQyB,KAAK,KCFJ,OAazB,eAACjE,EAAD,WACI,yEAAcmD,KACd,cAAC,kBAAD,CAAiBe,OAvBlB,WACXZ,GAAU,IAsBmCa,KAAMhB,EAAvC,SACI,cAAC/C,EAAD,CAAcgE,KAAK,UAAUC,UAAWlB,EAAiBmB,OAAQjB,EAAQkB,KAAM,cAACC,EAAA,EAAD,IAA/E,SACMnB,EAAyB,sEAAhB,kF,gICxChCoB,GAAUvF,IAAVuF,OAEMC,GAAetF,YAAOqF,GAAPrF,CAAH,MCEVqF,GAJA,kBACP,cAACC,GAAD,CAAcnF,MAAO,CAAEoF,UAAW,UAAlC,iOCgBOC,OAVf,WACE,OACI,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,CAAQrF,MAAO,CAAEoF,UAAW,UAA5B,oOCXRE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1116f1ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.de209962.svg\";","import styled from \"styled-components\"\r\nimport { Layout } from \"antd\"\r\n\r\nconst {Header} = Layout\r\n\r\nexport const LogoWrapper = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    img {\r\n        height: 80%;\r\n    }\r\n`\r\n\r\nexport const HeaderStyled = styled(Header)`\r\n    background-color: #D8D7EF;\r\n    height: 100px;\r\n`","import React from \"react\"\r\nimport logo from \"../../assets/images/logo.svg\"\r\nimport {HeaderStyled, LogoWrapper} from \"./style/HeaderStyle\"\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n        <HeaderStyled style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\r\n            <LogoWrapper>\r\n                <img src={logo}/>\r\n            </LogoWrapper>\r\n        </HeaderStyled>\r\n    )\r\n\r\n}\r\nexport default Header","import styled from \"styled-components\"\r\nimport {Button, Layout, Typography} from \"antd\"\r\n\r\nconst {Content} = Layout\r\n\r\nexport const ContentStyled = styled(Content)`\r\n    background-color: #13122A;\r\n    color: white;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    padding: 0 200px;\r\n    margin-top: 100px;\r\n    \r\n    @media screen and (max-width: 1000px) {\r\n        padding: 0 100px;\r\n    }\r\n    \r\n    @media screen and (max-width: 600px) {\r\n        padding: 0 50px;\r\n    }\r\n`\r\n\r\nexport const ContentWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`\r\n\r\nexport const PasswordWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const TitleWrapper = styled.div`\r\n    color: white;\r\n    margin-bottom: 40px;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n`\r\n\r\nexport const Title = styled(Typography.Title)`\r\n    color: white !important;\r\n`\r\n\r\nexport const ButtonStyled = styled(Button)`\r\n    background-color: #13922C !important;\r\n    border-color: #13922C !important;\r\n    &.ant-btn-background-ghost{\r\n        background-color: transparent !important;\r\n        border-color: #40A9FF !important;\r\n    }\r\n    &[disabled] {\r\n        border-color: #6B6B73 !important;\r\n        color: #6B6B73 !important;\r\n    }\r\n`","import styled from \"styled-components\"\r\nimport { Form } from 'antd';\r\n\r\nexport const FormItemStyled = styled(Form.Item)`\r\n    .ant-form-item-required{\r\n        color: white;\r\n    }\r\n`","import React, {useLayoutEffect, useRef} from \"react\"\r\nimport { Form, Input, } from 'antd'\r\nimport {FormItemStyled} from \"./style/GeneratePasswordForm\"\r\n\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst GeneratePasswordForm = ({generatorPassword, onIDInputChange}) => {\r\n\r\n    return (\r\n        <Form\r\n            {...layout}\r\n            labelCol={{ span: 0 }}\r\n            wrapperCol={{ span: 24 }}\r\n            form={generatorPassword}\r\n            initialValues={{ remember: true }}\r\n            size=\"large\"\r\n        >\r\n            <FormItemStyled\r\n                label=\"ID\"\r\n                name=\"id\"\r\n                rules={[{ required: true, message: 'Пожалуйста, введите ваш ID!' }]}\r\n                onChange={onIDInputChange}\r\n            >\r\n                <Input autofocus=\"true\"/>\r\n            </FormItemStyled>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default GeneratePasswordForm\r\n\r\n","const randomInRange = (min, max) =>\r\n    Math.floor(min + Math.random() * (max + 1 - min))\r\n\r\nconst generateLowerCaseLetter = () =>\r\n    String.fromCharCode(randomInRange(97, 122))\r\n\r\nconst generateUpperCaseLetter = () =>\r\n    String.fromCharCode(randomInRange(65, 90))\r\n\r\nconst generateModCount = (count, index) => {\r\n    const result = Math.pow(count,4) % 100\r\n    return (index === 6 && result < 10) ? 0 : result\r\n}\r\n\r\nfunction* generatePartOfPassword(start, end, func, count = 0) {\r\n    for (let i = start; i <= end; i++)\r\n        yield (start === 6) ? func(count, i) : func()\r\n}\r\n\r\nfunction* generatePassword(count) {\r\n\r\n    yield* generatePartOfPassword(1, 3, generateLowerCaseLetter)\r\n    yield* generatePartOfPassword(4, 5, generateUpperCaseLetter)\r\n    yield* generatePartOfPassword(6, 7, generateModCount, count)\r\n\r\n}\r\n\r\nexport default count =>\r\n    Array.from(generatePassword(count)).join(\"\")\r\n","import React, {useEffect, useState} from \"react\"\r\nimport {Button, Form, Typography} from \"antd\"\r\nimport {ButtonStyled, ContentStyled, ContentWrapper, PasswordWrapper, Title, TitleWrapper} from \"./style/MainStyle\"\r\nimport GeneratePasswordForm from \"./GeneratePasswordForm/GeneratePasswordForm\"\r\nimport generatePassword from \"../../utils/generatePassword\"\r\nimport { CopyOutlined } from '@ant-design/icons'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\r\n\r\nconst Main = () => {\r\n\r\n    const [generatorPassword] = Form.useForm();\r\n    const [currentPassword, changeCurrentPassword] = useState(\"\")\r\n    const [copied, setCopied] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        setCopied(false)\r\n    }, [currentPassword])\r\n\r\n    const onCopy = () => {\r\n        setCopied(true)\r\n    }\r\n\r\n    const onIDInputChange = () =>{\r\n        debugger\r\n        const fieldValueLength = generatorPassword.getFieldValue(\"id\").length\r\n        if (!fieldValueLength)\r\n            return changeCurrentPassword(\"\")\r\n        return changeCurrentPassword(generatePassword(fieldValueLength))\r\n    }\r\n\r\n    return (\r\n        <ContentStyled className=\"site-layout\">\r\n            <ContentWrapper className=\"site-layout-background\" style={{ padding: 24, minHeight: \"calc(100vh - 170px)\" }}>\r\n                <TitleWrapper>\r\n                    <Title level={1}>\r\n                        Генератор паролей\r\n                    </Title>\r\n                </TitleWrapper>\r\n                <GeneratePasswordForm generatorPassword={generatorPassword} onIDInputChange={onIDInputChange}/>\r\n                <PasswordWrapper>\r\n                    <div>Пароль: {currentPassword}</div>\r\n                    <CopyToClipboard onCopy={onCopy} text={currentPassword}>\r\n                        <ButtonStyled type=\"primary\" disabled={!currentPassword} ghost={!copied} icon={<CopyOutlined />}>\r\n                            {!copied ? \"Скопировать\" : \"Скопировано!\"}\r\n                        </ButtonStyled>\r\n                    </CopyToClipboard>\r\n                </PasswordWrapper>\r\n            </ContentWrapper>\r\n        </ContentStyled>\r\n    )\r\n}\r\n\r\nexport default Main","import styled from \"styled-components\"\r\nimport { Layout } from \"antd\"\r\n\r\nconst {Footer} = Layout\r\n\r\nexport const FooterStyled = styled(Footer)`\r\n    background-color: #13122A;\r\n    color: white;\r\n`","import React from \"react\"\r\nimport {FooterStyled} from \"./style/FooteStyle\"\r\n\r\nconst Footer = () => (\r\n        <FooterStyled style={{ textAlign: 'center' }}>Generator Passwords ©2020 Колышев Н.И., Сахаров А.А., Статуева А.С.</FooterStyled>\r\n)\r\n\r\nexport default Footer","import React from \"react\"\n\nimport 'antd/dist/antd.css'\nimport Header from \"./UI-components/Header/Header\"\nimport Main from \"./UI-components/Main/Main\"\nimport Footer from \"./UI-components/Footer/Footer\"\nimport { Layout } from 'antd'\n\n\n\nfunction App() {\n  return (\n      <Layout>\n        <Header/>\n        <Main/>\n        <Footer style={{ textAlign: 'center' }}>Generator Passwords ©2020 Колышев Н.И., Сахаров А.А., Статуева А.С.</Footer>\n      </Layout>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}